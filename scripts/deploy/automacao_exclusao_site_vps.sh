#!/bin/bash

# ================================
# CONFIGURA√á√ïES (ajuste conforme o site)
# ================================
NOME_SITE="meusite"
DOMINIO="meusite.com"
DOMINIO_WWW="www.meusite.com"
SITE_DIR="/var/www/$NOME_SITE"
VENV_DIR="$SITE_DIR/venv_${NOME_SITE}"
LOG_PATH="/var/log/${NOME_SITE}"
CONFIG_PATH="/etc/config_${NOME_SITE}"
SERVICE_NAME="$NOME_SITE"
NGINX_CONF="/etc/nginx/sites-available/${DOMINIO}"

echo "üßπ Iniciando remo√ß√£o do site $NOME_SITE ($DOMINIO)"

# ================================
# PARA E DESABILITA O SERVI√áO GUNICORN
# ================================
echo "‚õî Parando servi√ßo $SERVICE_NAME..."
sudo systemctl stop "$SERVICE_NAME" 2>/dev/null || echo "Servi√ßo j√° parado ou inexistente."
sudo systemctl disable "$SERVICE_NAME" 2>/dev/null || echo "Servi√ßo j√° desabilitado ou inexistente."

# Remove arquivo do systemd
echo "üóëÔ∏è  Removendo arquivo de servi√ßo systemd..."
sudo rm -f "/etc/systemd/system/${SERVICE_NAME}.service"

# Recarrega systemd
sudo systemctl daemon-reload

# ================================
# REMOVE CONFIGURA√á√ÉO DO NGINX
# ================================
echo "üóëÔ∏è  Removendo configura√ß√£o do Nginx..."
sudo rm -f "$NGINX_CONF"
sudo rm -f "/etc/nginx/sites-enabled/${DOMINIO}"
sudo rm -f "/etc/nginx/sites-enabled/default" 2>/dev/null

# Recarrega o Nginx para aplicar altera√ß√µes
sudo nginx -t && sudo systemctl reload nginx

# ================================
# REMOVE CERTIFICADO SSL LET'S ENCRYPT
# ================================
echo "üîê Preservando certificado SSL Let's Encrypt existente."
#echo "üîê Removendo certificado SSL Let's Encrypt..."
#sudo certbot delete --cert-name "$DOMINIO" --non-interactive || echo "‚ö†Ô∏è Certbot delete falhou ou certificado n√£o existe."

# ================================
# REMOVE AMBIENTE VIRTUAL
# ================================
echo "üßΩ Removendo ambiente virtual..."

# Encerra venv se estiver ativa
if [[ "$VIRTUAL_ENV" == "$VENV_DIR" ]]; then
    echo "‚ö†Ô∏è  Ambiente virtual est√° ativo. Encerrando..."
    deactivate || echo "N√£o foi poss√≠vel desativar virtualenv (pode n√£o estar ativa no contexto do script)."
fi

# Mata processos que ainda estejam usando a venv (ex: gunicorn zumbi)
# Verifica e mata processos usando a venv
echo "üîç Verificando processos que usam o ambiente virtual..."
PIDS=$(lsof +D "$VENV_DIR" 2>/dev/null | awk '{print $2}' | grep -E '^[0-9]+$' | sort -u)
if [[ -n "$PIDS" ]]; then
    echo "‚ö†Ô∏è  Matando processos que usam a venv: $PIDS"
    sudo kill -9 $PIDS
    sleep 2
fi

# Aguarda brevemente para garantir libera√ß√£o do sistema de arquivos
sleep 2

# Remove a venv
sudo rm -rf "$VENV_DIR"

if [ -d "$VENV_DIR" ]; then
    echo "‚ùå Falha ao remover o ambiente virtual $VENV_DIR"
else
    echo "‚úÖ Ambiente virtual removido com sucesso."
fi

# ================================
# REMOVE ARQUIVOS DO PROJETO, LOGS E CONFIGURA√á√ÉO
# ================================
echo "üóëÔ∏è  Removendo diret√≥rios do projeto, logs e configs..."
sudo rm -rf "$SITE_DIR"
sudo rm -rf "$LOG_PATH"
sudo rm -rf "$CONFIG_PATH"

echo -e "\n‚úÖ Remo√ß√£o do site '$NOME_SITE' conclu√≠da com sucesso.\n"
